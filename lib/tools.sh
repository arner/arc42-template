#!/bin/sh -e

dir='docs'

function check() {
  if [ "${PWD##*/}" != $dir ]; then
    echo "Execute this script from the $dir directory."
    exit 1
  fi

  if [ ! -f "../node_modules/.bin/puml" ]; then
    echo "Run 'npm i' to install dependencies."
  fi
}

function generate_diagrams() {
  working_dir="$PWD"

  cd $1
  for i in *.puml; do 
    ../node_modules/.bin/puml generate -o $i.png --png $i
  done

  cd "$working_dir"
}

function install_adr_template() {
  destdir=node_modules/adr-tools/build/main/lib/templates
  old=${destdir}/en.md
  new=../lib/adr_template.md

  if [ ! -f "$new" ]; then
    echo "Template $new not found"
  fi

  mv $old ${old}.bak
  cp $new ${destdir}/en.md
}

function generate_toc() {
  input_dir=$1
  header=$2
  bullet=${3:--}

  output="$header"

  IFS=$'\n'
  for file in `ls $input_dir/*.md | awk '!/README.md/ && !/_sidebar.md/'`
  do
    pretty=${file%.*}
    pretty=${pretty//_/\ }
    pretty=${pretty//-/\ }
    pretty=${pretty##*/}
    output="$output\n$bullet [$pretty]($file)"
  done

  echo $output
}

generate_all_toc() {
  # Main page for ADR
  generate_toc adr "<!--- Autogenerated -->\n # 9. Architecture Decisions\n" > 09._Architecture_Decisions.md 
  local adr=`generate_toc adr "" "  -"`

  # Sidebar
  generate_toc . > _sidebar.md
  insertAfter _sidebar.md "09" `printf %q $adr`

  # Table of Contents (used for PDF)
  tocfile=00._Table_of_Contents.md
  generate_toc . "# Table of Contents\n" > $tocfile
  insertAfter $tocfile "09" `printf %q $adr`
  awk '!/00/' < $tocfile > temp.md && mv temp.md $tocfile
}

function insertAfter(){ # file line newText
  local file="$1" line="$2" newText="$3"
  if [[ `uname` == 'Darwin' ]]; then
    sed -i '' -e "/09/a"$'\\\n'"$newText"$'\n' "$file"
  else
    sed -i -e "/^$line$/a"$'\\\n'"$newText"$'\n' "$file"
  fi
}

case $1 in
  "diagrams" )
    generate_diagrams ${2:-diagrams};;
  "toc" )
    generate_all_toc;;
  "install_adr_template" )
    install_adr_template;;
  "all" )
    generate_diagrams diagrams
    generate_all_toc
    ;;
esac
