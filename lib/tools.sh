#!/bin/sh -e

if [ "${PWD##*/}" != 'docs' ]; then
  echo "Execute this script from the 'docs' directory."
  exit 1
fi

if [ ! -f "node_modules/.bin/puml" ]; then
  echo "Run 'npm i' to install dependencies."
  exit 1
fi

PUML_PATH=`echo $(cd $(dirname node_modules/.bin/puml); pwd)/puml`

function process_diagrams_in_dir() {
  for i in `find . -maxdepth 1 -name "*.puml"`; do
    echo "Processing $i"
    eval "$PUML_PATH generate -o $i.png --png $i"
  done
}

function generate_diagrams() {
  cd diagrams
  process_diagrams_in_dir

  # node-plantuml doesn't handle relative paths well, so we have to enter the directory.
  for d in ./*/ ; do 
    cd $d
    process_diagrams_in_dir
    cd ..
  done

  cd ..
}

function install_adr_template() {
  local destdir=node_modules/adr-tools/build/main/lib/templates
  local old=${destdir}/en.md
  local new=../lib/adr_template.md

  if [ ! -f "$new" ]; then
    echo "Template $new not found"
  fi

  mv $old ${old}.bak
  cp $new ${destdir}/en.md
}

function generate_toc() {
  local input_dir=$1 header=$2 bullet=${3:--}
  local files=`find $input_dir -maxdepth 1 -name "*.md" | awk '!/README.md/ && !/_sidebar.md/' | sort` 

  output="$header"

  IFS=$'\n'
  for file in $files
  do
    pretty=${file%.*}
    pretty=${pretty//_/\ }
    pretty=${pretty//-/\ }
    pretty=${pretty##*/}
    output="$output$bullet [$pretty]($file)\n"
  done

  echo "$output\c"
}

generate_all_toc() {
  # Main page for ADR
  generate_toc adr "<!--- Autogenerated -->\n\n # 9. Architecture Decisions\n" > 09._Architecture_Decisions.md 
  local adr=`generate_toc adr "" "  -"`

  # Sidebar
  generate_toc . > _sidebar.md
  insertAfter _sidebar.md "09" `printf %q $adr`

  # Table of Contents (used for PDF)
  local tocfile=00._Table_of_Contents.md
  generate_toc . "# Table of Contents\n\n" > $tocfile
  insertAfter $tocfile "09" `printf %q $adr`
  awk '!/00/' < $tocfile > temp.md && mv temp.md $tocfile

  echo "Generated Table of Contents"
}

function insertAfter(){ # file line newText
  local file="$1" line="$2" newText="$3"

  if [[ -z "$newText" || "z$newText" == "z''" ]]; then 
    return 0
  fi

  if [[ `uname` == 'Darwin' ]]; then
    sed -i '' -e "/09/a"$'\\\n'"$newText"$'\n' "$file"
  else
    sed -i -e "/^$line$/a"$'\\\n'"$newText"$'\n' "$file"
  fi
}

case $1 in
  "diagrams" )
    generate_diagrams;;
  "toc" )
    generate_all_toc;;
  "install_adr_template" )
    install_adr_template;;
  "all" )
    generate_diagrams
    generate_all_toc
    ;;
esac
